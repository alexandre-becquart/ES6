{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./modules/application.js","webpack:///./src/index.js"],"names":["Application","constructor","url","loadjson","listPict","fetch","Promise","resolve","reject","then","res","json","data","catch","err","console","error","getAuthors","liste","map","item","author","join","newApp","document","querySelector","innerHTML"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;;AAEA;;AACA;;AACA;AAEe,MAAMA,WAAN,CAAkB;AAAE;AAE/BC,aAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX,CADa,CACE;AAClB;;AAEDC,UAAQ,GAAG;AAAE;AACT,UAAMC,QAAQ,GAAGC,KAAK,CAAC,KAAKH,GAAN,CAAtB,CADO,CAC0B;;AAEjC,WAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAAE;AAEtCJ,cAAQ,CACHK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAC6B;AAD7B,OAGKF,IAHL,CAGUC,GAAG,IAAI;AAAE;AACX,aAAKE,IAAL,GAAYF,GAAZ;AACAH,eAAO,CAAC,UAAD,CAAP,CAFS,CAEW;AACvB,OANL,EAOKM,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAPlB,EAFoC,CASE;AACzC,KAVM,CAAP;AAYH;;AACDG,YAAU,GAAG;AAET;AAEA,UAAMC,KAAK,GAAG,KAAKN,IAAL,CAAUO,GAAV,CAAcC,IAAI,IAAI;AAChC;AACA;AAEA,aAAQ,OAAMA,IAAI,CAACC,MAAO,OAA1B,CAJgC,CAIA;AAEnC,KANa,EAMXC,IANW,CAMN,EANM,CAAd,CAJS,CAUG;;AAEZ,WAAQ,QAAOJ,KAAM,QAArB,CAZS,CAYoB;;AAE7B;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGH;;AArD4B;AAyDjC;;AACA;;AACA,gF;;;;;;;;;;;;ACjEA;AAAA;CAAiD;;AAGjD,MAAMK,MAAM,GAAG,IAAIvB,4DAAJ,CAAgB,4BAAhB,CAAf,C,CAA8D;;AAE9DuB,MAAM,CAACpB,QAAP,GAAkB;AAAlB,CACKM,IADL,CACU,MAAM;AAAE;AACVe,UAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BC,SAA9B,GAA0CH,MAAM,CAACN,UAAP,EAA1C;AAIH,CANL,EAOKJ,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAPlB,E","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// https://picsum.photos/list\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                 ma version                                 */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport default class Application { // j'exporte  ma class pour pouvoir l'utiliser dans mon index.js\r\n\r\n    constructor(url) {\r\n        this.url = url //il crée une const url qui sera possible d'utiliser partout dans la class - il récupéère l'url donnée dans l'index.js : const newApp = new Application('https://picsum.photos/list');\r\n    }\r\n\r\n    loadjson() { //FCT pour charger mon fichier json\r\n        const listPict = fetch(this.url) // je récupère un fichier json de l'url grâce à fetch() et je le stock dans une variable\r\n\r\n        return new Promise((resolve, reject) => { // je retourne une promise avec une solution ok et un refut\r\n\r\n            listPict\r\n                .then(res => res.json()) // je prends mon fichier stocker dans la const listPict et je le convertie en fichier json\r\n\r\n                .then(res => { // je lui demande de retourner un  resultat stocker dans un fct qui sera dispo dans toute la classe grâce au this.\r\n                    this.data = res;\r\n                    resolve(\"c'est ok\") // je lui indique que c'est ok\r\n                })\r\n                .catch(err => console.error(err)) // je lui indique quoir faire au cas où il y a une erreur\r\n        })\r\n\r\n    }\r\n    getAuthors() {\r\n\r\n        /* --------------------- liste des auteurs avec doublons -------------------- */\r\n\r\n        const liste = this.data.map(item => {\r\n            // je prends la liste stocker dans le this.data et je boucle pour qu'il me retourne chaque auteurs de la liste dans un <li></li>\r\n            // il peut être fait avec un reduce(total,item), dans ce cas pas besoin d'un join(\"\")\r\n\r\n            return `<li>${item.author}</li>`//toujours mettre un return sinon pas de résultat \r\n\r\n        }).join('') //Je lui ajoute un join, sinon j'ai un \",\" après chaque élément\r\n\r\n        return `<ul> ${liste} </ul>` //le fait d'avoir stocker mes <li> dans une const, je peux mtn retourner son résultat entre des balise <ul> pour obtenir une liste\r\n\r\n        /* ------------- afficher la liste des auteurs sans les doublons ------------ */\r\n\r\n        // let arrayAuthors = []; //je crée un tableau vide pour contenir par la suite mes auteurs\r\n        // const liste = this.data.map(item => {  \r\n        //     arrayAuthors.push(item.author) //je boucle dans la liste stocker dans this.data pour ajouter chaque élément dans mon tableau arrayAuthors[] avec push\r\n        //     // \r\n\r\n        // })\r\n        // arrayAuthors = [...new Set(arrayAuthors)] // je filtre les doublons dans mon tableau avec [...new Set(arrayAuthors)] et le maj en indiquant arrayAuthors = [...new Set(arrayAuthors)]\r\n        // const authores = arrayAuthors.map(item => {\r\n        //     return `<li>${item}</li>` // je boucle dans mon tableau arrayAuthors pour mettre chaque Item dans un <li> et je les strocke dans une variable pour les mettre dans un <ul>\r\n\r\n        // }).join('') //Je lui ajoute un join, sinon j'ai un \",\" après chaque élément\r\n\r\n        // return `<ul> ${authores} </ul>` // je mets ma liste stocké dans la const authores pour l'entourer dans un <ul>\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                 correction                                 */\r\n/* -------------------------------------------------------------------------- */\r\n","import Application from \"../modules/application\" //j'importe application.js dans mon index.js\r\n\r\n\r\nconst newApp = new Application('https://picsum.photos/list'); // je crée une nouvelle instance d'Application en lui donnant l'url du JSON\r\n\r\nnewApp.loadjson() // je lance la fonction définie dans applications.js sur ma nouvelle instance\r\n    .then(() => { // une fois que tu as terminé de lancer la fct loadjson tu ajoutes à la div le contenu de la fct getAuthors\r\n        document.querySelector('div').innerHTML = newApp.getAuthors()\r\n\r\n\r\n\r\n    })\r\n    .catch(err => console.error(err))\r\n"],"sourceRoot":""}